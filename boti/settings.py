"""
Django settings for boti project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

import pymysql
import dj_database_url

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', default = 'pollicacacacaca')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "False").lower() == "true"

ALLOWED_HOSTS = []
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)
# Application definition

INSTALLED_APPS = [
    'crispy_forms',
    'crispy_bootstrap5',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'usuarios',
    'crud',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

AUTH_USER_MODEL = 'usuarios.CustomUser'
LOGIN_REDIRECT_URL = '/redirect/'  #esto da el path donde llevara el login
LOGOUT_REDIRECT_URL = '/login/' #esto es para hacer logout
HANDLER403 = 'django.views.defaults.permission_denied' #para los permisos
LOGIN_URL = '/login/'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'sandbox.smtp.mailtrap.io'
EMAIL_HOST_USER = '2e4d3383880188'  # Tu username
EMAIL_HOST_PASSWORD = 'f673e1a6abd6f8'  # Tu password
EMAIL_PORT = 2525  # Puerto recomendado por defecto
EMAIL_USE_TLS = True  # Habilita TLS para seguridad
DEFAULT_FROM_EMAIL = 'no-reply@tu-dominio.com'  # Este puede ser cualquier correo válido


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'boti.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # Directorio donde están las plantillas
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
WSGI_APPLICATION = 'boti.wsgi.app'

# Database

# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
pymysql.install_as_MySQLdb()
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'BotilleriaMain',  # Nombre de la base de datos
        'USER': 'postgres',  # Usuario
        'PASSWORD': 'coraje123',  # Reemplaza con tu contraseña de Supabase
        'HOST': 'localhost',  # Host
        'PORT': '5432',  # Puerto
    }
}
DATABASES["default"] = dj_database_url.parse("postgresql://botilleria_db_user:bShHCdYypm1IqhK61UAbYaf7I8zrCVoD@dpg-ctf2sud2ng1s738gb4dg-a.frankfurt-postgres.render.com/botilleria_db")

#postgresql://botilleria_db_user:bShHCdYypm1IqhK61UAbYaf7I8zrCVoD@dpg-ctf2sud2ng1s738gb4dg-a.frankfurt-postgres.render.com/botilleria_db
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


 
STATIC_URL = '/static/'   
if not DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') 
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' #ojo piojo con                #Configuran el manejo de archivos multimedia subidos por usuarios.
MEDIA_URL='/media/'  # esto hace referencia al espacio que se usara en la ur, el noticia/media
MEDIA_ROOT=os.path.join(BASE_DIR,"media")

STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
